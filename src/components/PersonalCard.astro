---
export interface Props {
  id: string;
  title?: string;
  personal: string;
  contact: string;
  date_posted: string;
  category?: string;
  location?: string;
}

const { id, title, personal, contact, date_posted, category, location } = Astro.props;

// Format date
const formattedDate = new Date(date_posted).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});

// Use the title if present, otherwise generate from the first 8 words
let headline = title;
if (!headline) {
  const words = personal.split(' ');
  headline = words.slice(0, 8).join(' ') + (words.length > 8 ? '...' : '');
}

// Byline: location • date
const byline = [location ? location.toUpperCase() : null, formattedDate].filter(Boolean).join(' • ');
---

<article class="personal-card">
  <!-- Byline -->
  <div class="flex items-center justify-between mb-2">
    <span class="text-xs text-gray-700 tracking-wide uppercase font-mono">{byline}</span>
    <span class="text-xs text-gray-400">#{id}</span>
  </div>
  <!-- Headline -->
  <h2 class="font-serif text-2xl md:text-3xl font-bold text-gray-900 mb-3 leading-tight tracking-tight" style="font-family: 'Playfair Display', serif;">
    {headline}
  </h2>
  <!-- Body -->
  <p class="text-base text-gray-800 leading-relaxed whitespace-pre-wrap font-sans" style="font-family: 'Inter', system-ui, sans-serif;">
    {personal}
  </p>
  <!-- Tags and Respond Button Row -->
  <div class="personal-bottom-row">
    <div class="flex flex-wrap gap-2">
      {category && <span class="personal-tag">{category}</span>}
    </div>
    <a 
      href={contact}
      target="_blank"
      rel="noopener noreferrer"
      class="personal-respond"
    >
      <svg class="w-4 h-4 mr-2" fill="none" stroke="#1a1a1a" stroke-width="2" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
      </svg>
      Respond
    </a>
  </div>
</article>

<style>
.personal-card {
  background: #fff;
  border-left: 8px solid #aaf0d1;
  border-radius: 0.5rem;
  box-shadow: 0 2px 8px 0 rgba(0,0,0,0.06);
  padding: 1.75rem;
  margin-bottom: 2.5rem;
  max-width: 42rem;
  margin-left: auto;
  margin-right: auto;
  font-family: 'Inter', 'Playfair Display', serif;
  display: flex;
  flex-direction: column;
  height: 100%;
}
.personal-tag {
  display: inline-block;
  border: 1.5px solid #aaf0d1;
  background: #e6fcf7;
  color: #1a1a1a;
  padding: 0.125rem 0.5rem;
  border-radius: 0.375rem;
  font-size: 0.75rem;
  font-family: 'ui-monospace', 'SFMono-Regular', 'Menlo', 'Monaco', 'Consolas', 'Liberation Mono', 'Courier New', monospace;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  font-weight: 600;
  transition: background 0.15s, color 0.15s;
}
.personal-tag:hover {
  background: #aaf0d1;
  color: #222;
}
.personal-respond {
  display: inline-flex;
  align-items: center;
  padding: 0.5rem 1rem;
  background: #aaf0d1;
  color: #1a1a1a;
  font-size: 1rem;
  font-weight: 600;
  border-radius: 0.375rem;
  border: 1.5px solid #aaf0d1;
  text-decoration: none;
  box-shadow: 0 1px 3px 0 rgba(0,0,0,0.04);
  transition: background 0.15s, color 0.15s, border 0.15s;
}
.personal-respond:hover {
  background: #7be0b2;
  border-color: #7be0b2;
  color: #1a1a1a;
}
.personal-respond:focus {
  outline: none;
  box-shadow: 0 0 0 3px #aaf0d180;
}
.personal-bottom-row {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-top: auto;
  gap: 1rem;
}
</style> 